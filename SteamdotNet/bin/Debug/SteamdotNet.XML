<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SteamdotNet</name>
    </assembly>
    <members>
        <member name="T:SteamdotNet.Common.OutputFileFormat">
            <summary>
            Contains all three output options
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputFileFormat.JSON">
            <summary>
            JSON output
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputFileFormat.XML">
            <summary>
            XML output
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputFileFormat.VDF">
            <summary>
            Valve Data Format output
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.SteamAppsParameters">
            <summary>
            Contains the parameters for the ISteamApps interface.
            It encapsulates the parameters for each method in structs.
            Cannot be inherited.
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.SteamAppsParameters.GetAppList">
            <summary>
            Parameters for ISteamApps.GetAppList
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.SteamAppsParameters.GetAppList.BaseParameters">
            <summary>
            Key, Format and Language parameters.
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.SteamAppsParameters.GetServersAtAddress">
            <summary>
            Parameters for ISteamApps.GetServersAtAddress
            </summary>
        </member>
        <member name="M:SteamdotNet.Common.SteamAppsParameters.GetServersAtAddress.#ctor(System.String)">
            <summary>
            Constructs the parameters for ISteamApps.GetServersAtAddress
            </summary>
            <param name="addr">IP address of the server (IPv4 format)</param>
        </member>
        <member name="P:SteamdotNet.Common.SteamAppsParameters.GetServersAtAddress.BaseParameters">
            <summary>
            Key, Format and Language parameters.
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.SteamAppsParameters.GetServersAtAddress.Addr">
            <summary>
            IP address of the server (IPv4 format)
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.SteamAppsParameters.UpToDateCheck">
            <summary>
            Parameters for ISteamApps.UpToDateCheck
            </summary>
        </member>
        <member name="M:SteamdotNet.Common.SteamAppsParameters.UpToDateCheck.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Construct the parameters for ISteamApps.UpToDateCheck
            </summary>
            <param name="appid">AppID of game. For example, Team Fortress 2 is 440.</param>
            <param name="version">Installed version of the game.</param>
        </member>
        <member name="P:SteamdotNet.Common.SteamAppsParameters.UpToDateCheck.BaseParameters">
            <summary>
            Key, Format and Language parameters.
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.SteamAppsParameters.UpToDateCheck.AppId">
            <summary>
            AppID of game. For example, Team Fortress 2 is 440.
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.SteamAppsParameters.UpToDateCheck.Version">
            <summary>
            Installed version of the game.
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.SteamApps.GetAppList">
            <summary>
            JSON: Root object
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.SteamApps.GetAppList.Applist">
            <summary>
            JSON: root.applist
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.SteamApps.App">
            <summary>
            JSON: root.applist.apps
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.SteamApps.App.Appid">
            <summary>
            JSON: root.applist.apps[].appid
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.SteamApps.App.Name">
            <summary>
            JSON: root.applist.apps[].name
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.SteamApps.AppList">
            <summary>
            JSON: root.applist
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.SteamApps.AppList.Apps">
            <summary>
            JSON: root.applist.apps
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.SteamBaseParameters">
            <summary>
            
            </summary>
        </member>
        <member name="M:SteamdotNet.Common.SteamBaseParameters.#ctor(System.String,SteamdotNet.Common.OutputFileFormat,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="format"></param>
            <param name="language"></param>
        </member>
        <member name="P:SteamdotNet.Common.SteamBaseParameters.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.SteamBaseParameters.Format">
            <summary>
            
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.SteamBaseParameters.Language">
            <summary>
            
            </summary>
        </member>
        <member name="T:SteamdotNet.ISteamApps">
            <summary>
            Holds the same methods as the ISteamApps interface from
            the Steam Web API.
            </summary>
        </member>
        <member name="T:SteamdotNet.Parsing.BaseParser">
            <summary>
            Holds all the base methods for all parsers.
            </summary>
        </member>
        <member name="M:SteamdotNet.Parsing.BaseParser.ParseFromURL``1(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:SteamdotNet.Parsing.JSONParser">
            <summary>
            First rudimentary implementation of a JSON parser, reading a JSON file from a REST service.
            </summary>
        </member>
        <member name="M:SteamdotNet.Parsing.JSONParser.ParseFromURL``1(System.String)">
            <summary>
            Parses a JSON from a service call to a given object type.
            It deserializes directly to a stream to reduce memory usage.
            </summary>
            <param name="url">URL of the service to call</param>
            <typeparam name="T">Type of object to return</typeparam>
            <returns>Parsed object of T type</returns>
        </member>
        <member name="T:SteamdotNet.Parsing.VDFParser">
            <summary>
            
            </summary>
        </member>
        <member name="T:SteamdotNet.Parsing.XMLParser">
            <summary>
            
            </summary>
        </member>
        <member name="T:SteamdotNet.SteamdotNetFactory">
            <summary>
            Factory pattern. All object are created through this class.
            </summary>
        </member>
        <member name="M:SteamdotNet.SteamdotNetFactory.CreateBaseParameters">
            <summary>
            Factory method. It creates a SteamBaseParameters object with its values
            read from the configuration.
            </summary>
            <returns>SteamBaseParameters object</returns>
        </member>
        <member name="M:SteamdotNet.SteamdotNetFactory.CreateMethodUrl``1(System.String,SteamdotNet.Common.SteamBaseParameters,``0)">
            <summary>
            Construct a valid call to the given API method providing the base URL and
            all the optional and required parameters.
            </summary>
            <param name="baseURL">Public URL of the API Method</param>
            <param name="baseParameters">Key, Format and language parameters</param>
            <param name="parameters">Method-specific parameters, they are contained in a struct</param>
            <typeparam name="T">struct</typeparam>
            <returns>Valid URL ready to call the API method</returns>
        </member>
    </members>
</doc>
