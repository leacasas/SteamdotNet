<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SteamdotNet</name>
    </assembly>
    <members>
        <member name="T:SteamdotNet.BaseSteamImplementer">
            <summary>
            Base class for all the interface implementation.
            This class holds common helper functions for all the
            interface implementations.
            </summary>
        </member>
        <member name="M:SteamdotNet.BaseSteamImplementer.ResolveParserType(SteamdotNet.Common.OutputFileFormat)">
            <summary>
            Returns the most suitable parser for the given output format
            </summary>
            <param name="fileFormat">Output file format</param>
            <returns>The most suitable parser object</returns>
        </member>
        <member name="T:SteamdotNet.Common.ISteamApps.Data.GetAppList">
            <summary>
            GetAppList: Root object
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.GetAppList.Applist">
            <summary>
            GetAppList: root.applist
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.ISteamApps.Data.App">
            <summary>
            GetAppList: root.applist.apps
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.App.Appid">
            <summary>
            GetAppList: root.applist.apps[].appid
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.App.Name">
            <summary>
            GetAppList: root.applist.apps[].name
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.ISteamApps.Data.AppList">
            <summary>
            GetAppList: root.applist
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.AppList.Apps">
            <summary>
            GetAppList: root.applist.apps
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.ISteamApps.Data.GetServersAtAddress">
            <summary>
            GetServersAtAddress: Root object
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.GetServersAtAddress.Response">
            <summary>
            GetServersAtAddress: root.response
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.ISteamApps.Data.Server">
            <summary>
            GetServersAtAddress: root.reponse.server[]
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.Server.Addr">
            <summary>
            GetServersAtAddress:  root.response.server[].addr
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.Server.Gmsindex">
            <summary>
            GetServersAtAddress:  root.response.server[].gmsindex
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.Server.Appid">
            <summary>
            GetServersAtAddress:  root.response.server[].appid
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.Server.Gamedir">
            <summary>
            GetServersAtAddress:  root.response.server[].gamedir
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.Server.Region">
            <summary>
            GetServersAtAddress:  root.response.server[].region
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.Server.Secure">
            <summary>
            GetServersAtAddress:  root.response.server[].secure
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.Server.Lan">
            <summary>
            GetServersAtAddress:  root.response.server[].lan
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.Server.Gameport">
            <summary>
            GetServersAtAddress:  root.response.server[].gameport
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.Server.Specport">
            <summary>
            GetServersAtAddress:  root.response.server[].specport
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.ISteamApps.Data.GetServersAtAddressResponse">
            <summary>
            GetServersAtAddress: root.response
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.GetServersAtAddressResponse.Success">
            <summary>
            GetServersAtAddress: root.response.success
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.GetServersAtAddressResponse.Servers">
            <summary>
            GetServersAtAddress: root.success.servers[]
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.ISteamApps.Data.UpToDateCheck">
            <summary>
            UpToDateCheck: root object
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.UpToDateCheck.Response">
            <summary>
            UpToDateCheck: root.response
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.ISteamApps.Data.UpToDateCheckResponse">
            <summary>
            UpToDateCheck: root.response
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.UpToDateCheckResponse.Success">
            <summary>
            root.response.success
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.UpToDateCheckResponse.Up_to_date">
            <summary>
            root.response.up_to_date
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.UpToDateCheckResponse.Version_is_listable">
            <summary>
            root.response.version_is_listable
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.UpToDateCheckResponse.Required_version">
            <summary>
            root.response.required_version
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.Data.UpToDateCheckResponse.Message">
            <summary>
            root.response.message
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.ISteamApps.SteamAppsParameters">
            <summary>
            Contains the parameters for the ISteamApps interface.
            It encapsulates the parameters for each method into structs.
            Cannot be inherited.
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.ISteamApps.SteamAppsParameters.GetAppList">
            <summary>
            Parameters for ISteamApps.GetAppList
            </summary>
        </member>
        <member name="M:SteamdotNet.Common.ISteamApps.SteamAppsParameters.GetAppList.#ctor(System.String,SteamdotNet.Common.OutputFileFormat,SteamdotNet.Common.OutputLanguage)">
            <summary>
            Constructs the parameters for ISteamApps.GetAppList
            </summary>
            <param name="key">Steam API developer key</param>
            <param name="format">Output file format</param>
            <param name="language">ISO639-1 country code</param>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.SteamAppsParameters.GetAppList.BaseParameters">
            <summary>
            Key, Format and Language parameters.
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.ISteamApps.SteamAppsParameters.GetServersAtAddress">
            <summary>
            Parameters for ISteamApps.GetServersAtAddress
            </summary>
        </member>
        <member name="M:SteamdotNet.Common.ISteamApps.SteamAppsParameters.GetServersAtAddress.#ctor(System.String,System.String,SteamdotNet.Common.OutputFileFormat,SteamdotNet.Common.OutputLanguage)">
            <summary>
            Constructs the parameters for ISteamApps.GetServersAtAddress
            </summary>
            <param name="addr">IP address of the server (IPv4 format)</param>
            <param name="key">Steam API developer key</param>
            <param name="format">Output file format</param>
            <param name="language">ISO639-1 country code</param>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.SteamAppsParameters.GetServersAtAddress.BaseParameters">
            <summary>
            Key, Format and Language parameters.
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.SteamAppsParameters.GetServersAtAddress.Addr">
            <summary>
            IP address of the server (IPv4 format)
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.ISteamApps.SteamAppsParameters.UpToDateCheck">
            <summary>
            Parameters for ISteamApps.UpToDateCheck
            </summary>
        </member>
        <member name="M:SteamdotNet.Common.ISteamApps.SteamAppsParameters.UpToDateCheck.#ctor(System.UInt32,System.UInt32,System.String,SteamdotNet.Common.OutputFileFormat,SteamdotNet.Common.OutputLanguage)">
            <summary>
            Creates the parameters for ISteamApps.UpToDateCheck
            </summary>
            <param name="appid"></param>
            <param name="version"></param>
            <param name="key">Steam API developer key</param>
            <param name="format">Output file format</param>
            <param name="language">ISO639-1 country code</param>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.SteamAppsParameters.UpToDateCheck.BaseParameters">
            <summary>
            Key, Format and Language parameters.
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.SteamAppsParameters.UpToDateCheck.AppId">
            <summary>
            AppID of game. For example, Team Fortress 2 is 440.
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamApps.SteamAppsParameters.UpToDateCheck.Version">
            <summary>
            Installed version of the game.
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.ISteamEconomy.SteamEconomyParameters">
            <summary>
            Contains the parameters for the ISteamEconomy interface.
            It encapsulates the parameters for each method into structs.
            Cannot be inherited.
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.ISteamEconomy.SteamEconomyParameters.GetAssetClassInfo">
            <summary>
            Parameters for ISteamEconomy.GetAssetClassInfo method.
            </summary>
        </member>
        <member name="M:SteamdotNet.Common.ISteamEconomy.SteamEconomyParameters.GetAssetClassInfo.#ctor(System.UInt32,System.UInt32,System.UInt64[],System.UInt64[],System.String,SteamdotNet.Common.OutputFileFormat,SteamdotNet.Common.OutputLanguage)">
            <summary>
            Constructs the parameters for ISteamEconomy.GetAssetClassInfo
            </summary>
            <param name="appid">AppID of game. For example, Team Fortress 2 is 440.</param>
            <param name="classCount">Amount of class ids passed to the request.</param>
            <param name="classidn">Series of sequential numbers that form a list of class ids</param>
            <param name="instanceidn">Instance ID of each class id passed</param>
            <param name="key">Steam Web API developer key</param>
            <param name="format">Output file format</param>
            <param name="language">Output language (ISO 639-1 code)</param>
        </member>
        <member name="P:SteamdotNet.Common.ISteamEconomy.SteamEconomyParameters.GetAssetClassInfo.BaseParameters">
            <summary>
            Key, Format and Language parameters.
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamEconomy.SteamEconomyParameters.GetAssetClassInfo.AppId">
            <summary>
            AppID of game. For example, Team Fortress 2 is 440.
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamEconomy.SteamEconomyParameters.GetAssetClassInfo.Class_Count">
            <summary>
            Amount of class ids passed to the request.
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamEconomy.SteamEconomyParameters.GetAssetClassInfo.ClassIDn">
            <summary>
            Series of sequential numbers that form a list of class ids.
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamEconomy.SteamEconomyParameters.GetAssetClassInfo.InstanceIDn">
            <summary>
            Instance ID of each class id passed.
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.ISteamEconomy.SteamEconomyParameters.GetAssetPrices">
            <summary>
            Parameters for ISteamEconomy.GetAssetPrices method.
            </summary>
        </member>
        <member name="M:SteamdotNet.Common.ISteamEconomy.SteamEconomyParameters.GetAssetPrices.#ctor(System.UInt32,System.String,SteamdotNet.Common.OutputFileFormat,SteamdotNet.Common.OutputLanguage,System.String)">
            <summary>
            Constructs the parameters for ISteamEconomy.GetAssetPrices
            </summary>
            <param name="appid">AppID of game. For example, Team Fortress 2 is 440.</param>
            <param name="key">Steam Web API developer key</param>
            <param name="format">Output file format</param>
            <param name="language">Output language (ISO 639-1 code)</param>
            <param name="currency">The ISO 4217 code for currency specific filtering. For example: US dollars is USD.</param>
        </member>
        <member name="P:SteamdotNet.Common.ISteamEconomy.SteamEconomyParameters.GetAssetPrices.BaseParameters">
            <summary>
            Key, Format and Language parameters.
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamEconomy.SteamEconomyParameters.GetAssetPrices.AppId">
            <summary>
            AppID of game. For example, Team Fortress 2 is 440.
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.ISteamEconomy.SteamEconomyParameters.GetAssetPrices.Currency">
            <summary>
            The ISO 4217 code for currency specific filtering. For example: US dollars is USD.
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.OutputFileFormat">
            <summary>
            Contains all three output options
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputFileFormat.JSON">
            <summary>
            JSON output
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputFileFormat.XML">
            <summary>
            XML output
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputFileFormat.VDF">
            <summary>
            Valve Data Format output
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.OutputLanguage">
            <summary>
            Contains all codes for the most common languages according to ISO 639-1 standards
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.NL">
            <summary>
            Dutch
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.EN">
            <summary>
            English
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.FR">
            <summary>
            French
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.DE">
            <summary>
            German
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.EL">
            <summary>
            Greek
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.IT">
            <summary>
            Italian
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.JA">
            <summary>
            Japanese
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.PT">
            <summary>
            Portuguese
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.RU">
            <summary>
            Russian
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.ES">
            <summary>
            Spanish
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.SV">
            <summary>
            Swedish
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.TR">
            <summary>
            Turkish
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.ZH">
            <summary>
            Chinese
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.AR">
            <summary>
            Arabic
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.KO">
            <summary>
            Korean
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.NO">
            <summary>
            Norwegian
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.PL">
            <summary>
            Polish
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.RO">
            <summary>
            Romanian
            </summary>
        </member>
        <member name="F:SteamdotNet.Common.OutputLanguage.UK">
            <summary>
            Ukrainian
            </summary>
        </member>
        <member name="T:SteamdotNet.Common.SteamBaseParameters">
            <summary>
            This class encapsulates three parameters that are shared
            across all methods of all interfaces of the Steam Web API.
            </summary>
        </member>
        <member name="M:SteamdotNet.Common.SteamBaseParameters.#ctor(System.String,SteamdotNet.Common.OutputFileFormat,SteamdotNet.Common.OutputLanguage)">
            <summary>
            Construct the common parameters.
            </summary>
            <param name="key">Steam API developer key</param>
            <param name="format">Output file format</param>
            <param name="language">ISO 639-1 language code</param>
            <exception cref="T:SteamdotNet.Exceptions.InvalidDeveloperKeyException">The provided Steam Developer key is invalid</exception>
        </member>
        <member name="P:SteamdotNet.Common.SteamBaseParameters.Key">
            <summary>
            Steam Developer Key
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.SteamBaseParameters.Format">
            <summary>
            Output file format. JSON, XML or Valve Data Format
            </summary>
        </member>
        <member name="P:SteamdotNet.Common.SteamBaseParameters.Language">
            <summary>
            Output language. ISO 639-1 code format.
            </summary>
        </member>
        <member name="T:SteamdotNet.Exceptions.InvalidDeveloperKeyException">
            <summary>
            Exception thrown when the an invalid Steam developer key
            is provided whenever requested.
            </summary>
        </member>
        <member name="T:SteamdotNet.ISteamApps">
            <summary>
            Methods related to the Steam APIs in general
            </summary>
        </member>
        <member name="T:SteamdotNet.ISteamEconomy">
            <summary>
            Methods related to games' store's assets
            </summary>
        </member>
        <member name="T:SteamdotNet.Parsing.BaseParser">
            <summary>
            Holds all the base methods for all parsers.
            </summary>
        </member>
        <member name="M:SteamdotNet.Parsing.BaseParser.ParseFromURL``1(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:SteamdotNet.Parsing.BaseParser.SerializeFromObject``1(``0)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:SteamdotNet.Parsing.BaseParser.DeserializeToObject``1(System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:SteamdotNet.Parsing.JSONParser">
            <summary>
            JSON Parser.
            </summary>
        </member>
        <member name="M:SteamdotNet.Parsing.JSONParser.ParseFromURL``1(System.String)">
            <summary>
            Parses a JSON from a service call to a given object type.
            It deserializes directly to a stream to reduce memory usage.
            </summary>
            <param name="url">URL of the service to call</param>
            <typeparam name="T">Type of object to return</typeparam>
            <returns>Parsed object of T type</returns>
        </member>
        <member name="M:SteamdotNet.Parsing.JSONParser.SerializeFromObject``1(``0)">
            <summary>
            Serializes a given object into a JSON string.
            </summary>
            <param name="source">Object to serialize</param>
            <typeparam name="T">Object type</typeparam>
            <returns>Serialized object into a JSON String</returns>
        </member>
        <member name="M:SteamdotNet.Parsing.JSONParser.DeserializeToObject``1(System.String)">
            <summary>
            Deserializes a given JSON string into an object
            </summary>
            <param name="source">JSON string</param>
            <typeparam name="T">Object type</typeparam>
            <returns>Deserialized object</returns>
        </member>
        <member name="T:SteamdotNet.Parsing.VDFParser">
            <summary>
            
            </summary>
        </member>
        <member name="T:SteamdotNet.Parsing.XMLParser">
            <summary>
            XML Parser
            </summary>
        </member>
        <member name="M:SteamdotNet.Parsing.XMLParser.ParseFromURL``1(System.String)">
            <summary>
            Parses a JSON from a service call to a given object type.
            It deserializes directly to a stream to reduce memory usage.
            </summary>
            <param name="url">URL of the service to call</param>
            <typeparam name="T">Type of object to return</typeparam>
            <returns>Parsed object of T type</returns>
        </member>
        <member name="M:SteamdotNet.Parsing.XMLParser.SerializeFromObject``1(``0)">
            <summary>
            Serializes a given object into XML.
            </summary>
            <param name="source">Object to serialize</param>
            <typeparam name="T">Object type</typeparam>
            <returns>Serialized object into a XML String</returns>
        </member>
        <member name="M:SteamdotNet.Parsing.XMLParser.DeserializeToObject``1(System.String)">
            <summary>
            Deserializes a given XML into an object
            </summary>
            <param name="source">string containing the XML Document</param>
            <typeparam name="T">Object type</typeparam>
            <returns>Deserialized object</returns>
        </member>
        <member name="T:SteamdotNet.SteamApps">
            <summary>
            Implements the ISteamApps interface and all its methods.
            Methods related to the Steam APIs in general.
            Cannot be inherited.
            </summary>
        </member>
        <member name="M:SteamdotNet.SteamApps.GetAppList(SteamdotNet.Common.ISteamApps.SteamAppsParameters.GetAppList)">
            <summary>
            ISteamApps.GetAppList
            </summary>
            <param name="parameters">GetAppList parameters(key, output format[optional], language [optional])</param>
            <returns>Full list of every publicly facing program in the store/library</returns>
        </member>
        <member name="M:SteamdotNet.SteamApps.GetServersAtAddress(SteamdotNet.Common.ISteamApps.SteamAppsParameters.GetServersAtAddress)">
            <summary>
            ISteamApps.GetServersAtAddress
            </summary>
            <param name="parameters">GetServersAtAddress parameters(IPv4 address, key, output format[optional], language [optional])</param>
            <returns>Shows all steam-compatible servers related to a IPv4 Address. </returns>
        </member>
        <member name="M:SteamdotNet.SteamApps.UpToDateCheck(SteamdotNet.Common.ISteamApps.SteamAppsParameters.UpToDateCheck)">
            <summary>
            ISteamApps.UpToDateCheck
            </summary>
            <param name="parameters">UpToDateCheck parameters(application id, version installed, key, output format[optional], language [optional])</param>
            <returns>Check if a given application version is the most current available. </returns>
        </member>
        <member name="T:SteamdotNet.SteamdotNetFactory">
            <summary>
            Factory pattern. All object are created through this class.
            </summary>
        </member>
        <member name="M:SteamdotNet.SteamdotNetFactory.CreateMethodUrl``1(System.String,SteamdotNet.Common.SteamBaseParameters,``0)">
            <summary>
            Construct a valid call to the given API method providing the base URL and
            all the optional and required parameters.
            </summary>
            <param name="baseURL">Public URL of the API Method</param>
            <param name="baseParameters">Key, Format and language parameters</param>
            <param name="parameters">Method-specific parameters, they are contained in a struct</param>
            <typeparam name="T">struct</typeparam>
            <returns>Valid URL ready to call the API method</returns>
        </member>
        <member name="T:SteamdotNet.SteamEconomy">
            <summary>
            Implements the ISteamEconomy and all its methods.
            Methods related to games' store's assets.
            Cannot be inherited.
            </summary>
        </member>
        <member name="M:SteamdotNet.SteamEconomy.GetAssetClassInfo(SteamdotNet.Common.ISteamEconomy.SteamEconomyParameters.GetAssetClassInfo)">
            <summary>
            Gets the asset class information.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:SteamdotNet.SteamEconomy.GetAssetPrices(SteamdotNet.Common.ISteamEconomy.SteamEconomyParameters.GetAssetPrices)">
            <summary>
            Gets the asset prices.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
    </members>
</doc>
